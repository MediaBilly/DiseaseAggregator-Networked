Κυριακόπουλος Βασίλειος
1115201700064

# Μεταγλώττιση Προγράμματος:make
# Εκτέλεση προγραμμάτων: Όπως ακριβώς αναφέρεται στην εκφώνηση της άσκησης με σειρά εκτέλεσης 1)whoServer 2)master και 3)whoClient και σειρά τερματισμού με CTRL+C
  1)whoServer 2)master και 3)whoClient.
  Οι whoClients θα είναι έτοιμοι να συνδεθούν αφού ο whoServer τυπώσει σε μήνυμα ότι συνδέθηκαν όλοι οι workers με ξεχωριστό μήνυμα 
  για τον κάθε ένα διότι στην υλοποίησή μου ο whoServer αφού ξεκινήσει μπορεί να δεχτεί συνδέσεις και από τα 2 port numbers ανεξάρτητα του ποιός
  έχει συνδεθεί.
# Καθαρισμός object files και executable: make clean

# Σημειώσεις:
- Χρησιμοποιήθηκαν οι ίδιες δομές με την 2η εργασία.
- Υλοποιήθηκαν και χειρισμοί σημάτων SIGINT και SIGQUIT για τον ομαλό τερματισμό και απελευθέρωση της μνήμης των προγραμμάτων.
- Οι IP διευθύνσεις που δίνονται ως ορίσματα είναι σε readable string format(δηλαδή μπορεί να δοθεί IP της μορφής localhost ή linuxΧΧ.di.uoa.gr)
- Η αναγνώρηση για τον τύπο του socket που συνδέθηκε στον whoServer ξεχωρίζεται μέσα από την select αφού ο whoServer έχει διαφορετικά sockets για να
  ακούει στα 2 διαφορετικά port numbers.
- Τα threads του whoClient συνδέονται μία φορά το κάθε ένα στον whoServer για να στείλουν τα queries τους, τα οποία τους διανέμονται στην αρχή πριν τη 
  δημιουργία τους σε numThreads ξεχωριστές λίστες.
- Και ο whoServer συνδέεται μία φορά σε όλους τους workers για να αποφευχθούν τυχόν μπλοκαρίσματα των workers το οποίο συμβαίνει για μεγάλο πλήθος queries.
- Όταν συνδέεται ένας νέος worker στον whoServer(είτε στην πρώτη εκκίνηση είτε μετά από τερματισμό κάποιου άλλου) απλά προστίθεται στην λίστα με τους workers 
  που κρατάει. Σε περίπτωση που δεν μπορεί να επικοινωνήσει ο whoServer με κάποιον από τους workers(κυρίως όταν αποσυνδέεται και αντικαθίσταται από άλλον)
  απλά τον προσπερνάει και αγνοείται η απάντηση από αυτόν.
- Το κυκλικό buffer του whoServer υλοποιήθηκε με χρήση του αλγόριθμου παραγωγού καταναλωτή(producer-consumer) όπου ο παραγωγός είναι το main thread του whoServer
  το οποίο παράγει τις συνδέσεις προιόντα και οι καταναλωτες τα numThreads του whoServer τα οποία καταναλώνουν τις συνδέσεις εξυπηρετώντας τα αιτήματά τους. 
  Για την υλοποίηση βασίστηκα στο παράδειγμα των διαφανειών όπου έκανα τις απαράιτητες αλλαγές για να δουλεύει σωστά. Η κύρια αλλαγή είναι ότι σε αυτή την περίπτωση
  ο παραγωγός παράγει άγνωστο αριθμό συνδέσεων (προιόντων).
- Τα summary statistics όπως και στη 2η εργασία δεν τα χρησιμοποίησα κάπου απλά τα στέλνω για να καταλάβει ότι ο whoServer ότι ο εκάστοτε worker είναι έτοιμος να
  αρχίσει να εξυπηρετεί αιτήματα.